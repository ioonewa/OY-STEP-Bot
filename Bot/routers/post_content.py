from aiogram import Router, F
from aiogram.types import (
    Message,
    CallbackQuery,
    FSInputFile,
    InputMediaPhoto
)
from aiogram.utils.media_group import MediaGroupBuilder
from aiogram.filters import Command, CommandStart, CommandObject
from ..utils import keyboards as kb
from ..utils.get_content import get_personal_photo

from loader import database

from typing import Optional

router = Router()

# https://t.me/oystep_bot?start=post1

test_previews = {
    "Red": "AgACAgIAAxkDAAMGaLS5J16_Yl0uXcS0SdPLf981HJ0AAm74MRvcpKhJOpH35U87vbABAAMCAAN5AAM2BA",
    "Blue": "AgACAgIAAxkDAAMHaLS5J0aN3fn3yEelquuNAa0do38AAm_4MRvcpKhJXVFVGtHleXgBAAMCAAN5AAM2BA",
    "Black": "AgACAgIAAxkDAAMFaLS5JpsovacRie3A6wq2lJggBKgAAm34MRvcpKhJ18zUH54Eh_8BAAMCAAN5AAM2BA"
}

async def get_post_vars(message: Message, number: str, current_var: Optional[str] = None, need_replace: bool = False):
    if not current_var:
        current_var = list(test_previews.keys())[0]
    
    photo = test_previews[current_var]
    
    if not need_replace:
        await message.answer_photo(
            photo=photo,
            caption="–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏/–∏—Å—Ç–æ—Ä–∏–∏",
            reply_markup=kb.post_vars_kb(number, list(test_previews.keys()), current_var)
        )
    else:
        await message.edit_media(
            media=InputMediaPhoto(media=photo, caption="–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏/–∏—Å—Ç–æ—Ä–∏–∏"),
            reply_markup=kb.post_vars_kb(number, list(test_previews.keys()), current_var)
        )
    

@router.message(CommandStart(deep_link=True))
async def get_post_content(message: Message, command: CommandObject):
    post = command.args.replace("post", "")
    if post == "1":
        await get_post_vars(message, post)
    else:
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç! –ö–∞–∂–µ—Ç—Å—è, —Ç—ã —Ç—É—Ç —Å–ª—É—á–∞–π–Ω–æ...")

@router.callback_query(F.data.startswith("var_"))
async def change_vars(call: CallbackQuery):
    current_var = call.data.replace("var_", "")
    await get_post_vars(call.message, "test", current_var, need_replace=True)

styles_rules = {
    "Red": {
        "top": 109,
        "left": 196,
        "rect_width": 605,
        "rect_height": 600,
        "angle": 5,
        "frame_path": "frame_red.png",
        "photo_path": "photo.png",
        "textes": {
            "username": {
                "text_top_offset": 804,
                "text_left_offset": 90,
                "font_size": 86,
                "font_path": "TT Interphases Pro Mono Trial Bold.ttf",
                "font_color": (0,0,0,255)
            }
        }
    }
}

@router.callback_query(F.data.startswith("post:"))
async def get_post_content(call: CallbackQuery):
    user_id = call.from_user.id
    place, post_id, style  = call.data.split(":")
    # post_id = int(post_id)
    post_id = 1

    files = await database.get_post_files(post_id, style)

    user_data = await database.get_user_data_dict(user_id)
    if not user_data:
        await call.message.answer("–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é")
        return
    
    personal_photo_id = await get_personal_photo(
        user_id,
        user_data,
        post_id,
        style
    )

    files.append(personal_photo_id)

    captions = {
        "Black": """<b>–ñ–∏–ª–æ–π –∫–æ–º–ø–ª–µ–∫—Å</b> –±–∏–∑–Ω–µ—Å-–∫–ª–∞—Å—Å–∞ <b>Stone Rise</b> –≤—Å–µ–≥–æ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç–∞—Ö –æ—Ç –º–µ—Ç—Ä–æ <b>–†–∏–º—Å–∫–∞—è</b> –∏ <b>–ü–ª–æ—â–∞–¥—å –ò–ª—å–∏—á–∞</b>.

–ü—Ä–æ–µ–∫—Ç –≤–∫–ª—é—á–∞–µ—Ç <b>—Ç—Ä–∏ –∫–æ—Ä–ø—É—Å–∞</b> —Ä–∞–∑–Ω–æ–π —ç—Ç–∞–∂–Ω–æ—Å—Ç–∏ (–¥–æ 28 —ç—Ç–∞–∂–µ–π), –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –≤  –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–º –¥–∏–∑–∞–π–Ω–µ —Å —Å–æ—á–µ—Ç–∞–Ω–∏–µ–º —Å–µ—Ä–æ–≥–æ –∏ –∏–∑—É–º—Ä—É–¥–Ω–æ–≥–æ –æ—Ç—Ç–µ–Ω–∫–æ–≤. –í—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–π —ç–∫—Å—Ç–µ—Ä—å–µ—Ä –∏ –ø–∞–Ω–æ—Ä–∞–º–Ω–æ–µ –æ—Å—Ç–µ–∫–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—é—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—É—é –¥–æ–º–∏–Ω–∞–Ω—Ç—É —Ä–∞–π–æ–Ω–∞.

<b>88 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–ª–∞–Ω–∏—Ä–æ–≤–æ–∫</b> ‚Äî –æ—Ç –∫–æ–º–ø–∞–∫—Ç–Ω—ã—Ö —Å—Ç—É–¥–∏–π —Å –±–∞–ª–∫–æ–Ω–∞–º–∏ –¥–æ –ø—Ä–æ—Å—Ç–æ—Ä–Ω—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä —Å –º–∞—Å—Ç–µ—Ä-—Å–ø–∞–ª—å–Ω—è–º–∏, –æ–∫–Ω–∞–º–∏ –≤ –≤–∞–Ω–Ω–æ–π –∏ –¥–∞–∂–µ –¥–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –¢–µ—Ä—Ä–∞—Å—ã –∏ –±–∞–ª–∫–æ–Ω—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ø–æ—á—Ç–∏ 20 % –∫–≤–∞—Ä—Ç–∏—Ä.

<b>–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞</b>: –≥—Ä–∞–Ω–¥-–ª–æ–±–±–∏ —Å –∫–æ—Ñ–µ-–∑–æ–Ω–æ–π –∏ —Ä–µ—Å–µ–ø—à–µ–Ω, —Å–µ–º–µ–π–Ω—ã–µ –∏ –∫–æ–≤–æ—Ä–∫–∏–Ω–≥-–∑–æ–Ω—ã, –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Ä—Ä–∞—Å—ã, –¥–µ—Ç—Å–∫–∏–µ –ø–ª–æ—â–∞–¥–∫–∏, –ª–∞–ø–æ–º–æ–π–∫–∏ –∏ –∫–ª–∞–¥–æ–≤—ã–µ. –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –∑–∞–∫—Ä—ã—Ç–∞—è, —Å –ø–æ–¥–∑–µ–º–Ω—ã–º –ø–∞—Ä–∫–∏–Ω–≥–æ–º

<blockquote>–ê–∫—Ü–∏—è –æ—Ç –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞: - 3% –æ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏</blockquote>""",
        "Blue": "<b>–ñ–ö Joice</b> ‚Äî –∫–æ–º—Ñ–æ—Ä—Ç, —Å—Ç–∏–ª—å –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –æ–¥–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ. –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –∏ –Ω–∞–π–¥–∏—Ç–µ —Å–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–æ–º",
        "Red": """<b>–ö–ª—É–±–Ω—ã–π –¥–æ–º –∫–ª–∞—Å—Å–∞ de luxe –≤ –•–∞–º–æ–≤–Ω–∏–∫–∞—Ö</b> ‚Äî —ç—Ç–æ –∫–∞–º–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–∞ 72 –∫–≤–∞—Ä—Ç–∏—Ä—ã, –≥–¥–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –∫–æ–º—Ñ–æ—Ä—Ç–æ–º. 

–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ <b>–ø—Ä–æ–¥—É–º–∞–Ω–æ –¥–æ –º–µ–ª–æ—á–µ–π</b>: –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–µ –æ–∫–Ω–∞, —Ç–µ—Ä—Ä–∞—Å—ã, wellness-–∑–æ–Ω–∞, –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–∞–¥ —Å –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç–∞–º–∏ –∏ –ø–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥. 

–£—é—Ç, —Å—Ç–∞—Ç—É—Å –∏ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ü–µ–Ω–∏—Ç —ç—Å—Ç–µ—Ç–∏–∫—É –∏ —Ç–∏—à–∏–Ω—É –≤ —Å–∞–º–æ–º —Å–µ—Ä–¥—Ü–µ –ú–æ—Å–∫–≤—ã."""
    }

    media_group = MediaGroupBuilder(
        caption=captions.get(style) + f"\n\n–ù–∞–ø–∏—à–∏ –º–Ω–µ, –∏ —è –ø–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É: @{user_data['username']}",
        media=[
            InputMediaPhoto(media=file) for file in files
        ]
    )

    await call.message.answer_media_group(media=media_group.build(), protect_content=False)
    await call.message.answer(
        "üëÜüèª\n–¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ—à–ª–∏ –ø–æ—Å—Ç –≤ —Å–≤–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª. <b>–ù–µ–∑–∞–±—É–¥—å —Å–∫—Ä—ã—Ç—å –∏–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è</b>"
    )
    await call.answer()

@router.callback_query(F.data == "current_var")
async def current_var(call: CallbackQuery):
    await call.answer()

