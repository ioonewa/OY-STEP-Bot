from Database import Database
from aiogram import Bot, Dispatcher, F
from aiogram.types import (Message, ReplyKeyboardMarkup, KeyboardButton)
from aiogram.filters import CommandStart, BaseFilter
from aiogram.enums.parse_mode import ParseMode
from aiogram.client.default import DefaultBotProperties

from loader import database

import random
import string
import config

from dotenv import load_dotenv
import os

import logging

logging.basicConfig(
    level=logging.INFO,
    filemode="w+",
    filename="logs/main_admin_bot.log"
)

load_dotenv()

bot = Bot(
    token=os.getenv("ADMIN_BOT_TOKEN"),
    default=DefaultBotProperties(
        protect_content=True,
        parse_mode=ParseMode.HTML
    )
)
dispatcher = Dispatcher()

database = Database({
    'host': os.getenv("DB_HOST"),
    'user': os.getenv("DB_USER"),
    'password': os.getenv("DB_PASSWORD"),
    'database': os.getenv("DB_NAME")
})

class AccessFilter(BaseFilter):
    async def __call__(self, event: Message) -> bool:
        return event.from_user.id in config.ADMINS

dispatcher.message.filter(AccessFilter())


def generate_code(length=12):
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for _ in range(length))

CREATE_LINK_BTN = "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ª—é–¥–µ–π"

async def main():
    await database.connect()
    await database.create_tables()

    @dispatcher.message(CommandStart())
    async def start(message: Message):
        await message.answer(
            f"<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å OYSTEP</b>\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –≤ OYSTEP (@oystep_bot), –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É <b>\"{CREATE_LINK_BTN}\"</b>",
            reply_markup=ReplyKeyboardMarkup(
                resize_keyboard=True,
                keyboard=[
                    [KeyboardButton(text=CREATE_LINK_BTN)]
                ]
            )
        )

    @dispatcher.message(F.text == CREATE_LINK_BTN)
    async def create_code(message: Message):
        code = generate_code()
        
        await database.add_invite_link(
            creator_id=message.from_user.id,
            code=code
        )
        
        invite_link = f"https://t.me/oystep_bot?start={code}"
        
        await message.answer(
            f"<code>{invite_link}</code>\n\n"
            f"üëÜüèª –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞\n\n"
            "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É\n"
            "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ –Ω—É–∂–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É\n"
            "3. –ö–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ –≤–æ—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–∞—à–µ–π —Å—Å—ã–ª–∫–æ–π, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ\n\n"
            "‚ùóÔ∏è –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ —Å—Å—ã–ª–∫–µ —Å–º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫.\n"
            "–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª—é–¥–µ–π, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ª—é–¥–µ–π\" –µ—â–µ —Ä–∞–∑",
        )

    await dispatcher.start_polling(bot)

import asyncio

asyncio.run(main())